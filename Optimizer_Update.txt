Problem with old code stemmed from the fact that is saved all results of the intermeadiate steps.


Following list attributes were chnaged in the Optimizer class:
self.yield_per_iter  (Stored as floats)
self.sim_observables (Stored as a dict) chaged to (Stored at int and float)
self.parameter_history  (Stored as numpy arrays)
self.final_yields       (Stored as a list of Tensor)  changed to (Stored as a list of int)
self.dimer_max           (Stored as a list of Tensor)  changed to (Stored as a list of int)
self.chap_max            (Stored as a list of Tensor)  changed to (Stored as a list of int)
self.endtimes            (Stored as a list of Tensor)  changed to (Stored as a list of int)
self.final_solns        (Stored as a list of Tensor) changed to (Stored as a list of arr(2))
self.final_t50        (Stored as a list of Tensor)    changed to (Stored as a list of int and float)
self.final_t85        (Stored as a list of Tensor)    changed to (Stored as a list of int and float)
self.final_t95        (Stored as a list of Tensor)    changed to (Stored as a list of int and float)
self.final_t99        (Stored as a list of Tensor)    changed to (Stored as a list of int and float)
self.final_unused_mon (Stored as a list of Tensor)  changed to (Stored as a list of int)
self.curr_time        (Stored as a list of Tensor)  changed to (Stored as a list of int)
self.flux_per_iter    (code was missing parts for incorporation of flux, got rid)



Memory usage ~15Mb -> ~14kB for 100 iter 

Made the optimization of the largest complex's node automatic unless otherwise notes (attributes largest_complex added to rex_net and vec_rxnnet)